\u001B[1mSYNOPSIS\u001B[0m
    ${project.description}

\u001B[1mDESCRIPTION\u001B[0m
    Dozer is a Java Bean to Java Bean mapper that recursively copies data from one object to another.
    Typically, these Java Beans will be of different complex types.

    Dozer supports simple property mapping, complex type mapping, bi-directional mapping, implicit-explicit mapping,
    as well as recursive mapping. This includes mapping collection attributes that also need mapping at the element
    level.

    Dozer not only supports mapping between attribute names, but also automatically converting between types.
    Most conversion scenarios are supported out of the box, but Dozer also allows you to specify custom conversions
    via XML.

    The mapper is used any time you need to take one type of Java Bean and map it to another type of Java Bean.
    Most field mapping can be done automatically by Dozer using reflection, but any custom mapping can be
    predescribed in XML format. Mapping is bi-directional so only one relationship between classes needs defining.
    If any property names on both objects are the same you do not even need to do any explicit property mapping for
    these fields.

\u001B[1mSEE ALSO\u001B[0m
    \u001B[36mhttp://dozer.sourceforge.net/\u001B[0m
