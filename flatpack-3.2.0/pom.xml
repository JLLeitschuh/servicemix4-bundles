<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--

        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->
    
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.apache.servicemix.bundles</groupId>
        <artifactId>bundles-pom</artifactId>
        <version>4</version>
    </parent>
    
    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.flatpack</artifactId>
    <version>3.2.0_2-SNAPSHOT</version>
    <packaging>bundle</packaging>
    <name>Apache ServiceMix :: Bundles :: ${pkgArtifactId}</name>
    <description>
        SYNOPSIS
            This OSGi bundle wraps ${pkgArtifactId} ${pkgVersion} jar file.

        DESCRIPTION
            FlatPack came out of the frustration of having to mix file parsing logic with business logic.

            FlatPack is a Java (1.4+) flat file parser that handles CSV, fixed length and custom delimiters. The
            formats are configured in XML, it is fast and released under Apache license 2.0.

            Starting at release 3.1, FlatPack introduces exporters via the writer package. This mechanism allows you
            to export a DataSet to a fixed length or delimited format.

            Substrings in a fixed width parse can be daunting to deal with when trying to analyze what existing code is
            doing, and what about when you have no comments...

            It also provides delimited file parsing; works with any delimiter / qualifier, multiline records, delimiter
            or qualifier allowed in column value.

        SEE ALSO
            http://flatpack.sourceforge.net/
    </description>
    
    <properties>
        <pkgGroupId>net.sf.flatpack</pkgGroupId>
        <pkgArtifactId>flatpack</pkgArtifactId>
        <pkgVersion>3.2.0</pkgVersion>
        <servicemix.osgi.export.pkg>
            net.sf.flatpack
        </servicemix.osgi.export.pkg>
        <servicemix.osgi.import.pkg>
            !net.sf.flatpack*,
            jxl*;resolution:=optional;version="[2.4.2,3)",
            org.jdom*;resolution:=optional;version="[1.0,2)",
            org.slf4j*;resolution:=optional;version="[1.1,2)",
            *
        </servicemix.osgi.import.pkg>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>${pkgGroupId}</groupId>
            <artifactId>${pkgArtifactId}</artifactId>
            <version>${pkgVersion}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>${pkgGroupId}:${pkgArtifactId}</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>${pkgGroupId}:${pkgArtifactId}</artifact>
                                    <includes>
                                        <include>fpconvert.properties</include>
                                    </includes>
                                </filter>
                            </filters>
                            <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>