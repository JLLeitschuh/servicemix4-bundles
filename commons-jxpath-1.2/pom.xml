<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--

        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements.  See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to You under the Apache License, Version 2.0
        (the "License"); you may not use this file except in compliance with
        the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    -->

    <modelVersion>4.0.0</modelVersion>

    <parent>
	    <groupId>org.apache.servicemix.bundles</groupId>
	    <artifactId>bundles-pom</artifactId>
	    <version>4</version>
    </parent>

    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.commons-jxpath</artifactId>
    <version>1.2_5-SNAPSHOT</version>
    <packaging>bundle</packaging>
    <name>Apache ServiceMix :: Bundles :: ${pkgArtifactId}</name>
    <description>
        SYNOPSIS
            This OSGi bundle wraps ${pkgArtifactId} ${pkgVersion} jar file.

        DESCRIPTION
            The org.apache.commons.jxpath package defines a simple interpreter of an expression language called XPath.
            JXPath applies XPath  expressions to graphs of objects of all kinds: JavaBeans, Maps, Servlet contexts,
            DOM etc, including mixtures thereof.

            Consider this example:

                Address address = (Address)JXPathContext.newContext(vendor).
                    getValue("locations[address/zipCode='90210']/address");

            This XPath expression is equivalent to the following Java code:

                Address address = null;
                Collection locations = vendor.getLocations();
                Iterator it = locations.iterator();
                while (it.hasNext()){
                    Location location = (Location)it.next();
                    String zipCode = location.getAddress().getZipCode();
                    if (zipCode.equals("90210")){
                    address = location.getAddress();
                    break;
                }
            }

            XPath was standardized by W3C and is used in both XSLT and XPointer.

            If you want to find out more about XPath, a good place to start is an excellent XPath Tutorial by W3Schools

            The official definition of XPath by W3C can be found at XML Path Language (XPath) Version 1.0

            Primary applications of JXPath are in scripting: JSP and similar template/script based technologies.
            However, programmers who prefer XML-flavored APIs, should consider JXPath as an alternative to other
            expression languages as well. JXPath is a must-have tool for those who work with mixtures of Java objects
            and XML and need to frequently traverse through graphs of those.

        SEE ALSO
            http://commons.apache.org/jxpath/
    </description>

    <properties>
        <pkgGroupId>commons-jxpath</pkgGroupId>
        <pkgArtifactId>commons-jxpath</pkgArtifactId>
        <pkgVersion>1.2</pkgVersion>
        <servicemix.osgi.export.pkg>
            org.apache.commons.jxpath
        </servicemix.osgi.export.pkg>
        <servicemix.osgi.import.pkg>
            !org.apache.commons.jxpath*,
            javax.servlet*;resolution:=optional;version="[2.2,3)",
            org.apache.commons.beanutils*;version="[1.4,2)",
            org.jdom*;resolution:=optional;version="[1.0,2)",
            *
        </servicemix.osgi.import.pkg>
        <servicemix.osgi.failok>true</servicemix.osgi.failok>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${pkgGroupId}</groupId>
            <artifactId>${pkgArtifactId}</artifactId>
            <version>${pkgVersion}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>${pkgGroupId}:${pkgArtifactId}</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>${pkgGroupId}:${pkgArtifactId}</artifact>
                                    <excludes>
                                        <exclude>**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
